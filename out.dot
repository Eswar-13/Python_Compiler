Graph {
0[label="NAME( : )"];
1[label="List "];
2[label=" COLON"];
3--1; 3--2; 3[label=" Annassign"];
3--0;
4--5;5[label="DELIMITER(()"];4[label="parameters"];
4--3;
4--6;6[label="DELIMITER())"];
7[label="Keyword(None)"];
8[label="Name( i )"];
9[label="Data Type( int )"];
10[label="Number( 0 )"];
11[label=" Operator (=)"];
12--11; 12--10; 12[label=" param_list "];
13[label=" COLON"];
14--9; 14--12;  14--13; 14[label=" Annassign"];
14--8;
15--14; 15[label=" Stmt List"];
16--15; 16[label=" Suite"];
17[label="Name( i )"];
18[label="Name( range )"];
19[label="Name( len )"];
20[label="Name( array )"];
22--21;21[label="Delimiter(()"];22[label="trailer"];
22--20;
22--23;23[label="Delimiter())"];
24--19;24[label="atom_expr"];
24--22;
26--25;25[label="Delimiter(()"];26[label="trailer"];
26--24;
26--27;27[label="Delimiter())"];
28--18;28[label="atom_expr"];
28--26;
29[label="Name( swapped )"];
30[label="Data Type( bool )"];
31[label="Keyword(False)"];
32[label=" Operator (=)"];
33--32; 33--31; 33[label=" param_list "];
34[label=" COLON"];
35--30; 35--33;  35--34; 35[label=" Annassign"];
35--29;
36--35; 36[label=" Stmt List"];
37--36; 37[label=" Suite"];
38[label="Name( j )"];
39[label="Name( range )"];
40[label="Number( 0 )"];
41[label="Name( len )"];
42[label="Name( array )"];
44--43;43[label="Delimiter(()"];44[label="trailer"];
44--42;
44--45;45[label="Delimiter())"];
46--41;46[label="atom_expr"];
46--44;
47[label="Name( i )"];
48--46;48[label="Operator(-)"];
48--47;
49[label="Number( 1 )"];
50--48;50[label="Operator(-)"];
50--49;
51--40;
51--52;52[label="DELIMITER(,)"];51[label="arglist"];
51--50;
54--53;53[label="Delimiter(()"];54[label="trailer"];
54--51;
54--55;55[label="Delimiter())"];
56--39;56[label="atom_expr"];
56--54;
57[label="Name( array )"];
58[label="Name( j )"];
60--59;59[label="Delimiter([)"];60[label="trailer"];
60--58;
60--61;61[label="Delimiter(])"];
62--57;62[label="atom_expr"];
62--60;
63[label="Operator( > )"];
64[label="Name( array )"];
65[label="Name( j )"];
66[label="Number( 1 )"];
67--65;67[label="Operator(+)"];
67--66;
69--68;68[label="Delimiter([)"];69[label="trailer"];
69--67;
69--70;70[label="Delimiter(])"];
71--64;71[label="atom_expr"];
71--69;
63--62;
63--71;
72[label="Name( temp )"];
73[label="Data Type( int )"];
74[label="Name( array )"];
75[label="Name( j )"];
77--76;76[label="Delimiter([)"];77[label="trailer"];
77--75;
77--78;78[label="Delimiter(])"];
79--74;79[label="atom_expr"];
79--77;
80[label=" Operator (=)"];
81--80; 81--79; 81[label=" param_list "];
82[label=" COLON"];
83--73; 83--81;  83--82; 83[label=" Annassign"];
83--72;
84--83; 84[label=" Stmt List"];
85--84; 85[label=" Suite"];
86[label="Name( array )"];
87[label="Name( j )"];
89--88;88[label="Delimiter([)"];89[label="trailer"];
89--87;
89--90;90[label="Delimiter(])"];
91--86;91[label="atom_expr"];
91--89;
92[label="Name( array )"];
93[label="Name( j )"];
94[label="Number( 1 )"];
95--93;95[label="Operator(+)"];
95--94;
97--96;96[label="Delimiter([)"];97[label="trailer"];
97--95;
97--98;98[label="Delimiter(])"];
99--92;99[label="atom_expr"];
99--97;
100--99; 100[label="Operator (=)"];
100--91;
101--100; 101[label=" Expr"];
102--101; 102[label=" Stmt List"];
85--102;
103[label="Name( array )"];
104[label="Name( j )"];
105[label="Number( 1 )"];
106--104;106[label="Operator(+)"];
106--105;
108--107;107[label="Delimiter([)"];108[label="trailer"];
108--106;
108--109;109[label="Delimiter(])"];
110--103;110[label="atom_expr"];
110--108;
111[label="Name( temp )"];
112--111; 112[label="Operator (=)"];
112--110;
113--112; 113[label=" Expr"];
114--113; 114[label=" Stmt List"];
85--114;
115[label="Name( swapped )"];
116[label="Keyword(True)"];
117--116; 117[label="Operator (=)"];
117--115;
118--117; 118[label=" Expr"];
119--118; 119[label=" Stmt List"];
85--119;
120--121;121[label="Keyword(if)"];120[label="if_statement"];
120--63;
120--122;122[label="COLON"];
120--85;
123--120; 123[label=" Suite"];
124--125;125[label="Keyword(for)"];124[label="for_statement"];
124--38;
124--126;126[label="Keyword(in)"];
124--56;
124--127;127[label="COLON"];
124--123;
37--124;
128[label="Name( swapped )"];
129--128;129[label="Keyword(not)"];
130[label=" KEYWORD(break) "];
131--130; 131[label=" Stmt List"];
132--131; 132[label=" Suite"];
133--134;134[label="Keyword(if)"];133[label="if_statement"];
133--129;
133--135;135[label="COLON"];
133--132;
37--133;
136--137;137[label="Keyword(for)"];136[label="for_statement"];
136--17;
136--138;138[label="Keyword(in)"];
136--28;
136--139;139[label="COLON"];
136--37;
16--136;
140--141;141[label="DEF"];140[label="funcdef"];
140--142;142[label="NAME"];
140--4;
140--143;143[label="RETURN_ARROW"];
140--7;
140--144;144[label="COLON"];
140--16;
module--140;
145--146;146[label="DELIMITER(()"];145[label="parameters"];
145--147;147[label="DELIMITER())"];
148[label="Name( data )"];
149[label="List "];
150[label="Number( 2 )"];
151--150;151[label="Operator(-)"];
152[label="Number( 45 )"];
153--151;153[label="opt_test_stmt"];
153--154;154[label="Delimiter(,)"];
153--152;
155[label="Number( 0 )"];
156--153;156[label="opt_test_stmt"];
156--157;157[label="Delimiter(,)"];
156--155;
158[label="Number( 11 )"];
159--156;159[label="opt_test_stmt"];
159--160;160[label="Delimiter(,)"];
159--158;
161[label="Number( 9 )"];
162--161;162[label="Operator(-)"];
163--159;163[label="opt_test_stmt"];
163--164;164[label="Delimiter(,)"];
163--162;
166--165;165[label="Delimiter([)"];166[label="atom"];
166--163;
166--167;167[label="Delimiter(])"];
168[label=" Operator (=)"];
169--168; 169--166; 169[label=" param_list "];
170[label=" COLON"];
171--149; 171--169;  171--170; 171[label=" Annassign"];
171--148;
172--171; 172[label=" Stmt List"];
173--172; 173[label=" Suite"];
174[label="Name( bubbleSort )"];
175[label="Name( data )"];
177--176;176[label="Delimiter(()"];177[label="trailer"];
177--175;
177--178;178[label="Delimiter())"];
179--174;179[label="atom_expr"];
179--177;
173--179;
180[label="Name( print )"];
181[label="String( 'Sorted Array in Ascending Order:' )"];
183--182;182[label="Delimiter(()"];183[label="trailer"];
183--181;
183--184;184[label="Delimiter())"];
185--180;185[label="atom_expr"];
185--183;
173--185;
186[label="Name( i )"];
187[label="Data Type( int )"];
188[label="Number( 0 )"];
189[label=" Operator (=)"];
190--189; 190--188; 190[label=" param_list "];
191[label=" COLON"];
192--187; 192--190;  192--191; 192[label=" Annassign"];
192--186;
193--192; 193[label=" Stmt List"];
173--193;
194[label="Name( i )"];
195[label="Name( range )"];
196[label="Name( len )"];
197[label="Name( data )"];
199--198;198[label="Delimiter(()"];199[label="trailer"];
199--197;
199--200;200[label="Delimiter())"];
201--196;201[label="atom_expr"];
201--199;
203--202;202[label="Delimiter(()"];203[label="trailer"];
203--201;
203--204;204[label="Delimiter())"];
205--195;205[label="atom_expr"];
205--203;
206[label="Name( print )"];
207[label="Name( data )"];
208[label="Name( i )"];
210--209;209[label="Delimiter([)"];210[label="trailer"];
210--208;
210--211;211[label="Delimiter(])"];
212--207;212[label="atom_expr"];
212--210;
214--213;213[label="Delimiter(()"];214[label="trailer"];
214--212;
214--215;215[label="Delimiter())"];
216--206;216[label="atom_expr"];
216--214;
217--216; 217[label=" Suite"];
218--219;219[label="Keyword(for)"];218[label="for_statement"];
218--194;
218--220;220[label="Keyword(in)"];
218--205;
218--221;221[label="COLON"];
218--217;
173--218;
222--223;223[label="Keyword(def)"];222[label="funcdef"];
222--224;224[label="NAME"];
222--145;
222--225;225[label="COLON"];
222--173;
module--222;
226[label="Name( __name__ )"];
227[label="Operator( == )"];
228[label="String( \"__main__\" )"];
227--226;
227--228;
229[label="Name( main )"];
231--230;230[label="Delimiter(()"];231[label="trailer"];
231--232;232[label="Delimiter())"];
233--229;233[label="atom_expr"];
233--231;
234--233; 234[label=" Suite"];
235--236;236[label="Keyword(if)"];235[label="if_statement"];
235--227;
235--237;237[label="COLON"];
235--234;
module--235;
}